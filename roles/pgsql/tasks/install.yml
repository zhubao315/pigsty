---
#--------------------------------------------------------------#
# Install PostgreSQL Packages                           [pg_pkg]
#--------------------------------------------------------------#
- name: install postgres packages
  become: yes
  tags: pg_pkg
  block:

    # install postgres basic packages
    - name: install postgres packages
      environment: "{{ proxy_env | default({}) }}"
      package: name={{ item|replace('${pg_version}', pg_version|string)|replace('$v', pg_version|string)|regex_replace('\s+',',') }}
      with_items: "{{ pg_packages }}"

    # install postgres extensions
    - name: install postgres extensions
      tags: pg_extension
      environment: "{{ proxy_env | default({}) }}"
      package: name={{ item|replace('${pg_version}', pg_version|string)|replace('$v', pg_version|string)|regex_replace('\s+',',') }}
      with_items: "{{ pg_extensions }}"

    # fix run dir ownership
    - name: own /var/run/postgresql with dbsu
      file: path=/var/run/postgresql state=directory owner={{ pg_dbsu }} group=postgres

    # fix rpm trash and unused service file, shut debian default service
    - name: post installation cleanups
      tags: pg_post
      ignore_errors: true
      shell: |
        {% if os_package|default('rpm') == 'rpm' %}
        rm -rf /usr/lib/systemd/system/postgresql-{{ pg_version }}.service # rhel
        rm -rf '/%{_sysconfigdir}'   # introduced by patroni rpm
        rm -rf '/%{_logdir}'         # remove these if patroni rpm fixed
        chown -R {{ pg_dbsu }}:postgres /var/run/postgresql /var/lib/pgsql || /bin/true;
        
        {% elif os_package|default('rpm') == 'deb' %}
        # kill the default debian service
        systemctl stop --no-block postgresql   # the auto-started debian/ubuntu service
        rm -rf /lib/systemd/system/postgresql.service
        if ps -u postgres -o pid:1,command | grep -E 'postmaster|postgres:|-D' | grep 'config_file=/etc/postgresql/.*/main/postgresql.conf' ; then
            {{ pg_bin_dir }}/pg_ctl -D /var/lib/postgresql/{{ pg_version }}/main stop --mode=immediate
        fi
        if ps -u postgres -o pid:1,command | grep -E 'postmaster|postgres:|-D' | grep 'config_file=/etc/postgresql/.*/main/postgresql.conf' ; then
            sleep 2
            ps -u postgres -o pid:1,command | grep -E 'postmaster|postgres:|-D' | grep '/etc/postgresql/*/main/postgresql.conf' | awk '{print $1}' | xargs kill -9
        fi
        rm -rf /lib/systemd/system/postgresql.service
        chown -R {{ pg_dbsu }}:postgres /var/run/postgresql /var/lib/postgresql /etc/postgresql || /bin/true;
        {% endif %}
        chown -R {{ pg_dbsu }}:postgres "{{ pg_dbsu_home }}"
        systemctl daemon-reload;
        /bin/true;
      args: { executable: /bin/bash }

#--------------------------------------------------------------#
# Setup bin path                                       [pg_path]
#--------------------------------------------------------------#
# soft link pgsql bin dir to specific pgsql binary version
# RHEL  : /usr/pgsql-{{ pg_version }}
# Debian: /usr/lib/postgresql/{{ pg_version }}
- name: link pg bin dir to current version
  tags: pg_path
  file: src="{{ pg_home_dir }}" dest={{ pg_bin_dir | dirname }} state=link
  vars: { pg_home_dir : "{% if os_package is defined and os_package == 'deb' %}/usr/lib/postgresql/{{ pg_version }}{% else %}/usr/pgsql-{{ pg_version }}{% endif %}" }


#--------------------------------------------------------------#
# Setup pgsql profile                                   [pg_env]
#--------------------------------------------------------------#
# add /usr/pgsql/bin/ to PATH environment variable
- name: add pgsql path to system profile
  tags: pg_env
  copy:
    dest: /etc/profile.d/pgsql.sh
    mode: 0755
    content: |
      export PATH="{{ pg_bin_dir }}:/pg/bin:$PATH"
      export PGHOME={{ pg_bin_dir | dirname }}
      export PGDATA={{ pg_data }}
...