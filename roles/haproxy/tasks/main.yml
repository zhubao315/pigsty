---
#--------------------------------------------------------------#
# Install Haproxy                              [haproxy_install]
#--------------------------------------------------------------#
- name: install haproxy
  tags: haproxy_install
  ignore_errors: "{{ not haproxy_enabled|bool }}"   # ignore errors if not enabled
  block:

    - name: install haproxy
      package: name=haproxy state=present

    - name: create haproxy config dir
      file: path=/etc/haproxy state=directory owner=root mode=0700

    - name: create haproxy environment file
      file: path=/etc/default/haproxy state=touch mode=0644

    - name: create haproxy systemd service
      copy: src=haproxy.service dest={{ systemd_dir }}/haproxy.service
      vars: { systemd_dir: "{% if os_package is defined and os_package == 'deb' %}/lib/systemd/system/{% else %}/usr/lib/systemd/system{% endif %}" }

#--------------------------------------------------------------#
# Config Haproxy                                [haproxy_config]
#--------------------------------------------------------------#
- name: render haproxy config
  tags: haproxy_config
  block:

    - name: wipe haproxy config dir
      when: haproxy_clean|bool
      shell: "mkdir -p /etc/haproxy; rm -f /etc/haproxy/* ; /bin/true"
      args: { executable: /bin/bash }

    - name: render haproxy default config
      template: src=haproxy.cfg.j2 dest=/etc/haproxy/haproxy.cfg owner=root mode=0644

    - name: render haproxy service config
      when: haproxy_services is defined and haproxy_services|length > 0
      template: src=service.j2 dest=/etc/haproxy/{{ item.name }}.cfg owner=root mode=0644
      vars: { service: "{{ item }}" }
      with_items: "{{ haproxy_services }}"


#--------------------------------------------------------------#
# Launch Haproxy                                [haproxy_launch]
#--------------------------------------------------------------#
- name: launch haproxy
  tags: haproxy_launch
  block:

    - name: launch haproxy systemd service
      systemd: name=haproxy state=restarted enabled=yes daemon_reload=yes

    - name: wait for haproxy service online
      wait_for: host=127.0.0.1 port=9101 state=started timeout=10


#--------------------------------------------------------------#
# Reload Haproxy                                [haproxy_reload]
#--------------------------------------------------------------#
- name: reload haproxy to register node services
  tags: [ haproxy_reload , haproxy_config ]
  when: haproxy_reload|bool
  block:

    # if check fail on this step, haproxy will not be reloaded
    - name: check haproxy config before reload
      ignore_errors: no
      command: /usr/sbin/haproxy -f /etc/haproxy/haproxy.cfg -c -q

    # even if you perform haproxy reload on junk config, it will not fail
    - name: reload haproxy
      ignore_errors: false
      systemd: name=haproxy state=reloaded enabled=yes daemon_reload=yes


...