---
#-----------------------------------------------------------------
# PG_IDENTITY
#-----------------------------------------------------------------
pg_mode: pgsql          #CLUSTER  # pgsql cluster mode: pgsql,citus,gpsql
# pg_cluster:           #CLUSTER  # pgsql cluster name, required identity parameter
# pg_role: replica      #INSTANCE # pgsql role, required, could be primary,replica,offline
# pg_seq: 0             #INSTANCE # pgsql instance seq number, required identity parameter
#-----------------------------------------------------------------
# PG_REMOVE
#-----------------------------------------------------------------
pg_uninstall: false               # uninstall pg_packages? false by default
#-----------------------------------------------------------------
# ETCD (Reference)
#-----------------------------------------------------------------
etcd_port: 2379                   # etcd client port, 2379 by default
#-----------------------------------------------------------------
# PROMETHEUS (Reference)
#-----------------------------------------------------------------
prometheus_sd_dir: /etc/prometheus/targets # prometheus file service discovery directory
#-----------------------------------------------------------------
# GRAFANA (Reference)
#-----------------------------------------------------------------
grafana_admin_username: admin     # default grafana admin username
grafana_admin_password: pigsty    # default grafana admin password
#-----------------------------------------------------------------
# PG_BUSINESS (Reference)
#-----------------------------------------------------------------
pg_databases: []                  # postgres business databases
#-----------------------------------------------------------------
# PG_INSTALL (Reference)
#-----------------------------------------------------------------
pg_dbsu: postgres                 # os dbsu name, postgres by default, better not change it
pg_dbsu_home: /var/lib/pgsql      # postgresql home directory, `/var/lib/pgsql` by default
pg_version: 16                    # postgres major version to be installed, 16 by default
pg_bin_dir: /usr/pgsql/bin        # postgres binary dir, `/usr/pgsql/bin` by default
pg_log_dir: /pg/log/postgres      # postgres log dir, `/pg/log/postgres` by default
pg_packages:                      # pg packages to be installed, `${pg_version}` will be replaced
  - postgresql${pg_version}*
  - patroni pgbouncer pgbackrest pg_exporter pgbadger vip-manager patroni-etcd             # pgdg common tools
  - pg_repack_${pg_version}* wal2json_${pg_version}* passwordcheck_cracklib_${pg_version}* # important extensions
pg_extensions:                    # pg extensions to be installed, `${pg_version}` will be replaced
  - postgis34_${pg_version}* timescaledb-2-postgresql-${pg_version}* pgvector_${pg_version}*
#-----------------------------------------------------------------
# PG_BOOTSTRAP (Reference)
#-----------------------------------------------------------------
pg_safeguard: false               # prevent purging running postgres instance? false by default
pg_clean: true                    # purging postgres data during remove? true by default
pg_data: /pg/data                 # postgres data directory, `/pg/data` by default
pg_fs_main: /data                 # mountpoint/path for postgres main data, `/data` by default
pg_fs_bkup: /data/backups         # mountpoint/path for pg backup data, `/data/backup` by default
pg_namespace: /pg                 # top level key namespace in etcd, used by patroni & vip
patroni_ssl_enabled: false        # secure patroni RestAPI communications with SSL?
pg_service_provider: ''           # dedicate haproxy node group name, or empty string for local nodes by default
#-----------------------------------------------------------------
# PG_BACKUP (Reference)
#-----------------------------------------------------------------
pgbackrest_enabled: true          # enable pgbackrest on pgsql host?
pgbackrest_clean: true            # remove pg backup data during init?
pgbackrest_method: local          # pgbackrest repo method: local,minio,[user-defined...]
#-----------------------------------------------------------------
# PG_SERVICE (Reference)
#-----------------------------------------------------------------
pg_vip_enabled: false             # enable a l2 vip for pgsql primary? false by default
#-----------------------------------------------------------------
# INFRA (Reference)
#-----------------------------------------------------------------
infra_portal:                     # infra services exposed on the portal
  grafana: {domain: g.pigsty ,endpoint: "${admin_ip}:3000" ,websocket: true }
...